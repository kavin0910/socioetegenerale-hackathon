{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\evault\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport { auth, firestore } from './firebaseConfig';\nimport LegalRecords from './contracts/LegalRecords.json';\nimport Auth from './Auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [documentHash, setDocumentHash] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n        loadBlockchainData();\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n  const loadBlockchainData = async () => {\n    const web3 = new Web3(Web3.givenProvider || 'http://localhost:7545');\n    const accounts = await web3.eth.requestAccounts();\n    setAccount(accounts[0]);\n    const networkId = await web3.eth.net.getId();\n    if (networkId === 11155111) {\n      // Sepolia network ID\n      const networkData = LegalRecords.networks[networkId];\n      if (networkData) {\n        const legalRecords = new web3.eth.Contract(LegalRecords.abi, networkData.address);\n        setContract(legalRecords);\n        const recordCount = await legalRecords.methods.recordCount().call();\n        for (let i = 1; i <= recordCount; i++) {\n          const record = await legalRecords.methods.records(i).call();\n          setRecords(prevRecords => [...prevRecords, record]);\n        }\n      } else {\n        alert('Smart contract not deployed on the detected network.');\n      }\n    } else {\n      alert('Please connect to the Sepolia network.');\n    }\n  };\n  const uploadRecord = async e => {\n    e.preventDefault();\n    if (contract) {\n      await contract.methods.uploadRecord(documentHash).send({\n        from: account\n      });\n      const recordCount = await contract.methods.recordCount().call();\n      const record = await contract.methods.records(recordCount).call();\n      setRecords(prevRecords => [...prevRecords, record]);\n      firestore.collection('records').add({\n        documentHash: documentHash,\n        uploader: account,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"eVault System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: uploadRecord,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: documentHash,\n          onChange: e => setDocumentHash(e.target.value),\n          placeholder: \"Document Hash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hash: \", record.documentHash]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploader: \", record.uploader]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Timestamp: \", new Date(record.timestamp * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"M5pw0qyJ8xjxL2iyYKiBw4LsKas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Web3","auth","firestore","LegalRecords","Auth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","contract","setContract","records","setRecords","documentHash","setDocumentHash","user","setUser","onAuthStateChanged","loadBlockchainData","web3","givenProvider","accounts","eth","requestAccounts","networkId","net","getId","networkData","networks","legalRecords","Contract","abi","address","recordCount","methods","call","i","record","prevRecords","alert","uploadRecord","e","preventDefault","send","from","collection","add","uploader","timestamp","Date","toISOString","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","index","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/evault/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport { auth, firestore } from './firebaseConfig';\r\nimport LegalRecords from './contracts/LegalRecords.json';\r\nimport Auth from './Auth';\r\n\r\nfunction App() {\r\n    const [account, setAccount] = useState('');\r\n    const [contract, setContract] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const [documentHash, setDocumentHash] = useState('');\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUser(user);\r\n                loadBlockchainData();\r\n            } else {\r\n                setUser(null);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const loadBlockchainData = async () => {\r\n        const web3 = new Web3(Web3.givenProvider || 'http://localhost:7545');\r\n        const accounts = await web3.eth.requestAccounts();\r\n        setAccount(accounts[0]);\r\n        const networkId = await web3.eth.net.getId();\r\n        if (networkId === 11155111) {  // Sepolia network ID\r\n            const networkData = LegalRecords.networks[networkId];\r\n            if (networkData) {\r\n                const legalRecords = new web3.eth.Contract(LegalRecords.abi, networkData.address);\r\n                setContract(legalRecords);\r\n                const recordCount = await legalRecords.methods.recordCount().call();\r\n                for (let i = 1; i <= recordCount; i++) {\r\n                    const record = await legalRecords.methods.records(i).call();\r\n                    setRecords((prevRecords) => [...prevRecords, record]);\r\n                }\r\n            } else {\r\n                alert('Smart contract not deployed on the detected network.');\r\n            }\r\n        } else {\r\n            alert('Please connect to the Sepolia network.');\r\n        }\r\n    };\r\n\r\n    const uploadRecord = async (e) => {\r\n        e.preventDefault();\r\n        if (contract) {\r\n            await contract.methods.uploadRecord(documentHash).send({ from: account });\r\n            const recordCount = await contract.methods.recordCount().call();\r\n            const record = await contract.methods.records(recordCount).call();\r\n            setRecords((prevRecords) => [...prevRecords, record]);\r\n            firestore.collection('records').add({\r\n                documentHash: documentHash,\r\n                uploader: account,\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>eVault System</h1>\r\n            {user ? (\r\n                <>\r\n                    <p>Account: {account}</p>\r\n                    <form onSubmit={uploadRecord}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={documentHash}\r\n                            onChange={(e) => setDocumentHash(e.target.value)}\r\n                            placeholder=\"Document Hash\"\r\n                        />\r\n                        <button type=\"submit\">Upload Record</button>\r\n                    </form>\r\n                    <h2>Records</h2>\r\n                    <ul>\r\n                        {records.map((record, index) => (\r\n                            <li key={index}>\r\n                                <p>Hash: {record.documentHash}</p>\r\n                                <p>Uploader: {record.uploader}</p>\r\n                                <p>Timestamp: {new Date(record.timestamp * 1000).toLocaleString()}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            ) : (\r\n                <Auth />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}